@using Tuskr.Web.Models
@model IEnumerable<TaskModel>

@{
    ViewBag.Title = "all tasks";
}

@helper RenderCell(object item){ <td class="bordered">@item</td>}

@helper RenderDetailRow(TaskModel item, string groupId, string id) 
{
    <tr class="task-gp-content" id="@id" data-group-reference="@groupId">
        @RenderCell(item.Id)
        @RenderCell(item.Name)
        @RenderCell(item.Description)
        @RenderCell(item.StartDate)
        @RenderCell(item.Duration)
        @RenderCell(item.Status)
    </tr>
}

@helper RenderHeaderAndDetailRows(Func<TaskModel, bool> selector, string headerText, string dataGroupName)
{
    var tasks = Model.Where(selector).ToArray();
    if (tasks.Any())
    {
        <tr class="task-gp-hdr" id="@dataGroupName" data-group-key="@dataGroupName">
            <td colspan="6">@headerText</td>
        </tr>

        int i = 1;
        foreach (var item in tasks)
        {
            @RenderDetailRow(item, dataGroupName , string.Concat(dataGroupName, i))
            i++;
        }
    }
}

@section featured
{
    <div class="task-menu outline">
        <nav>
            <a href="#">
                <img src="@Url.Content("~/Images/add.png")" class="icon" />
            </a>
            <a href="#">
                <img src="@Url.Content("~/Images/edit.png")" class="icon" />
            </a>
        </nav>
    </div>
}

@section scripts
{
    <script type="text/javascript" src="@Url.Content("/Scripts/View_Scripts/Task/alltasks.js")"></script>
    <script type="text/javascript" src="@Url.Content("/Scripts/View_Scripts/Task/AddTask.js")"></script>
    
}

<table id="tasks" class="task-table bordered">
    <colgroup>
        <col class="task-id bordered" />
        <col class="task-name bordered" />
        <col class="task-Desc bordered" />
        <col class="task-start bordered" />
        <col class="task-duration bordered" />
        <col class="task-stat bordered" />
    </colgroup>

    <thead>
        <tr>
            <th class="bordered">Id</th>
            <th class="bordered">Name</th>
            <th class="bordered">Description</th>
            <th class="bordered">StartDate</th>
            <th class="bordered">Duration</th>
            <th class="bordered">Status</th>
        </tr>
    </thead>

    <tbody>
        @{
            @RenderHeaderAndDetailRows(m => m.StartDate < DateTime.Now.Date, "BackLog Tasks", "Backlog")
            @RenderHeaderAndDetailRows(m => m.StartDate == DateTime.Now.Date, "Tasks for today", "Current")
            @RenderHeaderAndDetailRows(m => m.StartDate > DateTime.Now.Date, "Future Tasks", "Future")
        }
    </tbody>
</table>

<div id="template-add" class="hide outline">
    @using (Html.BeginForm("AddTask", "Task", null))
        {
            var t = TaskModel.Empty();
            @Html.ValidationSummary(true)
            <fieldset>
                <legend>Add Task</legend>  
             
                <div class="input">
                    <label class="input-label">Task Name:</label>
                    <input class="input-elem" type="text" id="task-name" name="Name"/><br/>
                </div>
                <div class="input">
                    <label class="input-label">Task Description:</label>
                    <input class="input-elem" type="text" id="task-desc" name="Description"/><br/>
                </div>
                <div class="input">
                    <label class="input-label">Task Starting At:</label>
                    <input class="input-elem" type="text" id="task-start" name="StartDate"/><br />
                </div>
                <div class="input">
                    <label class="input-label">Task Duration:</label>
                    <input class="input-elem" type="text" id="task-duration" name="Duration"/><br/>
                </div>
                <div class="input">
                    <label class="input-label">Task Status:</label>
                    <input class="input-elem" type="text" id="task-status" name="Status"/><br/>
                </div>
            </fieldset>
            <input type="submit" id="submit" value="submit"/>
            <input type="button" id="close" value="close"/>
        }
</div>

