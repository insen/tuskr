@using Tuskr.Data.Entities
@using Tuskr.Web.Models

@model IEnumerable<TaskModel>

@{
    ViewBag.Title = "Swim lane view";
}

@helper RenderTask(TaskModel tm)
{
    @Html.Partial("Partials/_Task", tm)
}

@helper RenderSwimLane(IEnumerable<TaskModel> tasks, string taskStatus)
{
    <div id="@taskStatus" class="t-group c-txt col ctr outline">
        @if (tasks.Any())
        {
        <div class="lane-label"><em>@taskStatus</em>
            @foreach (var item in tasks)
            {
                @RenderTask(item)
            }
        </div>
        }
    </div>
}

@helper RenderPool() {
    @RenderSwimLane(Model.Where(tm => tm.Status == TaskStatus.Undefined), TaskStatus.Undefined.ToString())
    @RenderSwimLane(Model.Where(tm => tm.Status == TaskStatus.WaitStart), TaskStatus.WaitStart.ToString())
    @RenderSwimLane(Model.Where(tm => tm.Status == TaskStatus.Active), TaskStatus.Active.ToString())
    @RenderSwimLane(Model.Where(tm => tm.Status == TaskStatus.Done), TaskStatus.Done.ToString())
}

@section content_header
{
    @Html.Partial("Partials/_Task_Header")
}

@section Scripts
{
    <script type="text/javascript" src="@Url.Content("/Scripts/View_Scripts/Task/ShowWall.js")"></script>    
}

<div id="pool" class="ctr" >
    @RenderPool()
</div>