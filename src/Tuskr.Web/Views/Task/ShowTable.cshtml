@using Tuskr.Web.Models
@model IEnumerable<TaskModel>

@{
    ViewBag.Title = "all tasks";
}

@helper RenderCell(object item){ <td class="outline">@item</td>}

@helper RenderDetailRow(TaskModel item, string groupId, string id) 
{
    <tr class="task-gp-content" id="@id" data-group-reference="@groupId">
        @RenderCell(item.Id)
        @RenderCell(item.Name)
        @RenderCell(item.Description)
        @RenderCell(item.StartDate)
        @RenderCell(item.Duration)
        @RenderCell(item.Status)
    </tr>
}

@helper RenderHeaderAndDetailRows(Func<TaskModel, bool> selector, string headerText, string dataGroupName)
{
    var tasks = Model.Where(selector).ToArray();
    if (tasks.Any())
    {
        <tr class="task-gp-hdr" id="@dataGroupName" data-group-key="@dataGroupName">
            <td colspan="6">@headerText</td>
        </tr>

        int i = 1;
        foreach (var item in tasks)
        {
            @RenderDetailRow(item, dataGroupName , string.Concat(dataGroupName, i))
            i++;
        }
    }
}

@section content_header
{
    @Html.Partial("Partials/_Task_Header")
}

@section scripts
{
    <script type="text/javascript" src="@Url.Content("/Scripts/View_Scripts/Task/ShowTable.js")"></script>
}

<table id="tasks" class="task-table outline">
    <colgroup>
        <col class="task-id outline" />
        <col class="task-name outline" />
        <col class="task-Desc outline" />
        <col class="task-start outline" />
        <col class="task-duration outline" />
        <col class="task-stat outline" />
    </colgroup>

    <thead>
        <tr>
            <th class="outline">Id</th>
            <th class="outline">Name</th>
            <th class="outline">Description</th>
            <th class="outline">StartDate</th>
            <th class="outline">Duration</th>
            <th class="outline">Status</th>
        </tr>
    </thead>

    <tbody>
        @{
            @RenderHeaderAndDetailRows(m => m.StartDate < DateTime.Now.Date, "BackLog Tasks", "Backlog")
            @RenderHeaderAndDetailRows(m => m.StartDate == DateTime.Now.Date, "Tasks for today", "Current")
            @RenderHeaderAndDetailRows(m => m.StartDate > DateTime.Now.Date, "Future Tasks", "Future")
        }
    </tbody>
</table>



